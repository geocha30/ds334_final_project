---
title: "Predicting Growth Potential for Under-Developed Countries in the World Using Neural Networks"
author: "George Charalambous"
execute: 
  warning: false
format:
  html:
    embed-resources: true
    table-of-contents: true
---

## Load the Materials

```{r}
library(tidyverse)
library(here)
library(maps)
library(plotly)
library(broom)
library(colorspace)
world_df <- map_data("world")
```

```{r}
electricity_access <- read_csv("data/access_to_electricity/access_to_electricity.csv", 
                        skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
countries <- c("Afghanistan", "Angola", "Bangladesh", "Benin", "Burkina Faso", "Burundi", "Cambodia", "Central African Republic", "Chad", "Comoros", "Congo, Dem. Rep.", "Djibouti", "Eritrea", "Ethiopia", "Gambia, The", "Guinea", "Guinea-Bissau", "Haiti", "Kiribati", "Lao PDR", "Lesotho", "Liberia", "Madagascar", "Malawi", "Mali", "Mauritania", "Mozambique", "Myanmar", "Nepal", "Niger", "Rwanda", "Sao Tome and Principe", "Senegal", "Sierra Leone", "Solomon Islands", "Somalia", "South Sudan", "Sudan", "Tanzania", "Timor-Leste", "Togo", "Tuvalu", "Uganda", "Yemen, Rep.", "Zambia")
```

## Experimenting for the Model

```{r}
electricity_stats <- electricity_access |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Electricity Access") |>
  filter(!is.na(`Electricity Access`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_under_elec` = mean(`Electricity Access`, na.rm = TRUE),
            `sd_under_elec` = sd(`Electricity Access`, na.rm = TRUE))
```

## Experimenting for the Shiny App

```{r}
underdeveloped_electricity <- electricity_access |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Electricity Access") |>
  filter(!is.na(`Electricity Access`)) 
```

```{r}
underdeveloped_map <- left_join(underdeveloped_electricity, world_df, by = c("Country Name"="region"))
```

```{r}
plot_1 <- ggplot()+
  geom_polygon(data = world_df, mapping = aes(x = long, y = lat, group = group, label = region), fill = "grey")+
  geom_polygon(data = underdeveloped_map, mapping = aes(x = long, y = lat, group = group, fill = `Electricity Access`, label = `Country Name`))+
  scale_fill_continuous_sequential(palette = "Heat")+
  theme_minimal()

ggplotly(plot_1, tooltip = "label")
```

```{r}
agricultural_land <- read_csv("data/agricultural_land/agricultural_land.csv", 
                       skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
agriculture_land_stats <- agricultural_land |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Agricultural Land") |>
  filter(!is.na(`Agricultural Land`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_agr_land` = mean(`Agricultural Land`, na.rm = TRUE),
            `sd_agr_land` = sd(`Agricultural Land`, na.rm = TRUE))
```

```{r}
freshwater_withdrawals <- read_csv("data/annual_freshwater_withdrawals/freshwater_withdrawals.csv", 
                            skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
freshwater_withdrawals_stats <- freshwater_withdrawals |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Freshwater Withdrawals") |>
  filter(!is.na(`Freshwater Withdrawals`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_water_withd` = mean(`Freshwater Withdrawals`, na.rm = TRUE),
            `sd_water_withd` = sd(`Freshwater Withdrawals`, na.rm = TRUE))
```

```{r}
atms <- read_csv("data/atms/atms.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
atms_stats <- atms |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "ATMs") |>
  filter(!is.na(`ATMs`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_atms` = mean(`ATMs`, na.rm = TRUE),
            `sd_atms` = sd(`ATMs`,na.rm = TRUE))
```

```{r}
precipitation <- read_csv("data/avg_precipitation/precipitation_depth.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
precipitation_stats <- precipitation |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Precipitation") |>
  filter(!is.na(`Precipitation`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_precip` = mean(`Precipitation`, na.rm = TRUE),
            `sd_precip` = sd(`Precipitation`, na.rm = TRUE))
```

```{r}
sanitation <- read_csv("data/basic_sanitation_services/basic_sanitation.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
sanitation_stats <- sanitation |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Sanitation") |>
  filter(!is.na(`Sanitation`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_sanit` = mean(`Sanitation`, na.rm = TRUE),
            `sd_sanit` = sd(`Sanitation`, na.rm = TRUE))
```

```{r}
broad_money <- read_csv("data/broad_money/broad_money.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
broad_money_stats <- broad_money |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Broad Money") |>
  filter(!is.na(`Broad Money`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_broad` = mean(`Broad Money`, na.rm = TRUE),
            `sd_broad` = sd(`Broad Money`, na.rm = TRUE))
```

```{r}
agriculture_employment <- read_csv("data/employment_in_agr/employment_in_agr.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
agriculture_employment_stats <- agriculture_employment |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Employment in Agriculture") |>
  filter(!is.na(`Employment in Agriculture`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_empl_agr` = mean(`Employment in Agriculture`, na.rm = TRUE),
            `sd_empl_agr` = sd(`Employment in Agriculture`, na.rm = TRUE))
```

```{r}
fertility_rate <- read_csv("data/fertility_rate/fertility_rate.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
fertility_rate_stats <- fertility_rate |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Fertility Rate") |>
  filter(!is.na(`Fertility Rate`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_fert_rate` = mean(`Fertility Rate`, na.rm = TRUE),
            `sd_fert_rate` = sd(`Fertility Rate`, na.rm = TRUE))
```

```{r}
gov_debt <- read_csv("data/gov_debt/central_gov_debt.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
gov_debt_stats <- gov_debt |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Government Debt") |>
  filter(!is.na(`Government Debt`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_gov_debt` = mean(`Government Debt`, na.rm = TRUE),
            `sd_gov_debt` = sd(`Government Debt`, na.rm = TRUE))
```

```{r}
internet <- read_csv("data/internet/internet.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
internet_stats <- internet |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Internet") |>
  filter(!is.na(`Internet`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_inter` = mean(`Internet`, na.rm = TRUE),
            `sd_inter` = sd(`Internet`, na.rm = TRUE))
```

```{r}
birth_life_exp <- read_csv("data/life_expectancy_birth/life_expectancy_birth.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
birth_life_exp_stats <- birth_life_exp |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Life Expectancy at Birth") |>
  filter(!is.na(`Life Expectancy at Birth`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_life_exp` = mean(`Life Expectancy at Birth`, na.rm = TRUE),
            `sd_life_exp` = sd(`Life Expectancy at Birth`, na.rm = TRUE))
```

```{r}
poverty <- read_csv("data/poverty_headcount/poverty_headcount_ratio.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
poverty_stats <- poverty |>
  filter(`Country Name` %in% countries) |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "Poverty") |>
  filter(!is.na(`Poverty`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_pov` = mean(`Poverty`, na.rm = TRUE),
            `sd_pov` = sd(`Poverty`, na.rm = TRUE))
```

```{r}
school_enrol <- read_csv("data/school_enrollment/school_enrollment.csv", 
          skip = 4) |>
  select(-c(3:34), -c(67:69))
```

```{r}
school_enrol_stats <- school_enrol |>
  filter(`Country Name` %in% countries) |>
  pivot_longer(c(3:34), 
               names_to = "Year", 
               values_to = "School Enrollment") |>
  filter(!is.na(`School Enrollment`)) |>
  group_by(`Country Name`) |>
  summarise(`mean_school_enr` = mean(`School Enrollment`, na.rm = TRUE),
            `sd_school_enr` = sd(`School Enrollment`, na.rm = TRUE))
```

```{r}
full_stats_df <- agriculture_land_stats |>
  left_join(agriculture_employment_stats, by = "Country Name") |>
  left_join(atms_stats, by = "Country Name") |>
  left_join(birth_life_exp_stats, by = "Country Name") |>
  left_join(broad_money_stats, by = "Country Name") |>
  left_join(electricity_stats, by = "Country Name") |>
  left_join(fertility_rate_stats, by = "Country Name") |>
  left_join(freshwater_withdrawals_stats, by = "Country Name") |>
  left_join(gov_debt_stats, by = "Country Name") |>
  left_join(internet_stats, by = "Country Name") |>
  left_join(poverty_stats, by = "Country Name") |>
  left_join(precipitation_stats, by = "Country Name") |>
  left_join(sanitation_stats, by = "Country Name") |>
  left_join(school_enrol_stats, by = "Country Name") 
```

```{r}
full_stats_df <- 
  full_stats_df |>
  mutate(Underdeveloped = ifelse(`Country Name` %in% countries, 1, 0))
```


## Variable Description

| Variable | Description                            |
|----------|----------------------------------------|
| Access to Electricity | The percentage of population with access to electricity |
| Agricultural land | The share of land area that is arable, under permanent crops, and under permanent pastures |
| Annual freshwater withdrawals | Total water withdrawals, not counting evaporation losses from storage basins  |
| Automated teller machines (ATMs) | Automated teller machines per 100,000 adults |
| Average precipitation in depth | the long-term average in depth (over space and time) of annual precipitation in mm per year |
| Basic Sanitation Services | percentage of people using at least basic sanitation services, that is, improved sanitation facilities that are not shared with other households  |
| Broad money | The sum of currency outside banks, as a fraction of the GDP  |
| Employment in agriculture | The percentage of total employment engaged in agriculture  |
| Fertility rate | The number of children that would be born to a woman if she were to live to the end of her childbearing years and bear children in accordance with age-specific fertility rates of the specified year  |
| Central government debt | The entire stock of direct government fixed-term contractual obligations to others outstanding on a particular date  |
| Individual Use of Internet | The percentage of population that uses the internet  |
| Life expectancy at birth | The number of years a newborn infant would live if prevailing patterns of mortality at the time of its birth were to stay the same throughout its life  |
| Poverty headcount ratio | The percentage of the population living below the national poverty line(s)   |
| School enrollment, primary and secondary (gross) | The ratio of girls to boys enrolled at primary and secondary levels in public and private schools   |

## Data Set Investigation

```{r}
library(GGally)
ggpairs(data = full_stats_df, columns = c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28))
```

#### Logistic Regression Model Attempt

```{r}
model_glm <- glm(data = full_stats_df, Underdeveloped~mean_agr_land + mean_empl_agr + mean_life_exp + 
                  mean_under_elec + mean_fert_rate + mean_water_withd + mean_gov_debt + mean_precip, family = "binomial")
model_glm
```

```{r}
underdeveloped <- full_stats_df |>
  select(`Country Name`, Underdeveloped) |>
  filter(Underdeveloped == 1)
```

```{r}
developed <- full_stats_df |>
  select(`Country Name`, Underdeveloped) |>
  filter(Underdeveloped != 1)
```

```{r}
# Identify numeric columns
numeric_cols <- sapply(full_stats_df, is.numeric)

# Compute range for each numeric column, removing NA values
ranges <- sapply(full_stats_df[, numeric_cols], function(x) {
  x <- na.omit(x)
  c(min(x), max(x))
})
```

```{r}
median_water_withd = median(full_stats_df$mean_water_withd, na.rm = TRUE)
median__sanit = median(full_stats_df$mean_sanit, na.rm = TRUE)
```

```{r}
library(modelr)
grid <- full_stats_df |>
  data_grid(
  mean_agr_land = seq_range(c(0.529988, 83.730378), n = 3),
  mean_empl_agr = seq_range(c(0.3385729, 89.4033177),n = 3),
  mean_life_exp = seq_range(c(46.14012, 82.19024), n = 3),
  mean_under_elec = seq_range(c(4.210244, 100), n = 3), 
  mean_fert_rate = seq_range(c(1.104000, 7.502063), n = 3),
  mean_water_withd = median_water_withd, 
  mean_gov_debt = seq_range(c(1.845685, 179.297695), n = 3), 
  mean_precip = seq_range(c(18.100, 3219.742), n = 3), 
  mean_sanit = median_sanit
  ) 
grid
```

```{r}
aug_model <- augment(model_glm, newdata = grid, 
                     se_fit = TRUE)
```

```{r}
aug_model <- aug_model |>
  mutate(.predprob = (exp(.fitted)/(1+exp(.fitted))))
```

```{r}
ggplot(data = aug_model, mapping = aes(x = mean_agr_land, 
                                       y = .predprob)) +
  geom_line(color = "blue", linewidth = 1) +
  geom_ribbon(aes(ymin = .predprob - 1.96 * .se.fit,
                  ymax = .predprob + 1.96 * .se.fit),
              fill = "lightblue", alpha = 0.5) +
  theme_minimal()
```





